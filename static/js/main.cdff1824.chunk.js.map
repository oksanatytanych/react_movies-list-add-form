{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/pattern.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasLinkError","setHasLinkError","hasError","htmlFor","type","classNames","event","target","onBlur","test","NewMovie","onAdd","count","setCount","initialMovieState","setMovie","addNewField","field","newMovie","trim","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdff1824.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","// eslint-disable-next-line max-len\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  pattern?: RegExp,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => { },\n  pattern,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const [hasLinkError, setHasLinkError] = useState(false);\n  const hasError = touched && required && !value;\n  // const hasLinkError = touched && pattern && !pattern.test(value) && !hasError;\n\n  const checkLinkError = () => {\n    if (pattern && !pattern.test(value) && value) {\n      setHasLinkError(true);\n\n      return;\n    }\n\n    setTouched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n            'is-warning': hasLinkError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => checkLinkError()}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasLinkError && (\n        <p className=\"help is-warning\">{`The ${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { pattern } from '../../api/pattern';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const initialMovieState = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [movie, setMovie] = useState<Movie>(initialMovieState);\n\n  const addNewField = (field: string, value: string) => {\n    setMovie(newMovie => ({\n      ...newMovie,\n      [field]: value,\n    }));\n  };\n\n  const hasError = () => {\n    return !movie.title.trim()\n      || !movie.imgUrl.trim()\n      || !movie.imdbUrl.trim()\n      || !movie.imdbId.trim()\n      || !pattern.test(movie.imgUrl)\n      || !pattern.test(movie.imdbUrl);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (hasError()) {\n      return;\n    }\n\n    onAdd(movie);\n\n    setMovie(initialMovieState);\n    setCount(count + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={(value) => addNewField('title', value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={(value) => addNewField('description', value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={(value) => addNewField('imgUrl', value)}\n        required\n        pattern={pattern}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={(value) => addNewField('imdbUrl', value)}\n        required\n        pattern={pattern}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={(value) => addNewField('imdbId', value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={hasError()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovie => [...currentMovie, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}